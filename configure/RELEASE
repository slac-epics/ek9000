# RELEASE.local
#
# Read definitions of:
#	EPICS_SITE_TOP
#	BASE_MODULE_VERSION
#	EPICS_MODULES 
# from one of the following options
-include $(TOP)/../../RELEASE_SITE
-include $(TOP)/RELEASE_SITE

# Check that EPICS_MODULES was defined in a RELEASE_SITE file
-include $(TOP)/../../RELEASE_SITE.check

# ==========================================================
# Define the version strings for all needed modules
# Use naming pattern:
#   FOO_MODULE_VERSION = R1.2
# so scripts can extract version strings
# Don't set your version to anything such as "test" that
# could match a directory name.
# ==========================================================
ASYN_MODULE_VERSION=R4.32-1.0.1
MODBUS_MODULE_VERSION=R3.0.0-0.2.0
EK9000_MODULE_VERSION=R1.0.3

# ==========================================================
# Define module paths using pattern
# FOO = $(EPICS_MODULES)/foo/$(FOO_MODULE_VERSION)
#  or
# FOO = /Full/Path/To/Development/Version 
# ==========================================================
ASYN=$(EPICS_MODULES)/asyn/$(ASYN_MODULE_VERSION)
MODBUS=$(EPICS_MODULES)/modbus/$(MODBUS_MODULE_VERSION)
EK9000=$(EPICS_MODULES)/ek9000/$(EK9000_MODULE_VERSION)
#EK9000=/reg/neh/home/lorelli/ek9000-release/ek9000-slac-R1.0.3/

# ============================================================
#  Module Location
# ============================================================

# Set EPICS_BASE last so it appears last in the DB, DBD, INCLUDE, and LIB search paths
EPICS_BASE              = $(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)

# Check for undefined EPICS_BASE
-include $(TOP)/../../EPICS_BASE.check

